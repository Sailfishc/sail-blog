<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on 橙小张的博客</title>
    <link>https://blog.sailfishc.cn/tags/python/</link>
    <description>Recent content in Python on 橙小张的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 08 Mar 2020 18:48:42 +0800</lastBuildDate><atom:link href="https://blog.sailfishc.cn/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何学习SICP</title>
      <link>https://blog.sailfishc.cn/posts/2020/03/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0sicp/</link>
      <pubDate>Sun, 08 Mar 2020 18:48:42 +0800</pubDate>
      
      <guid>https://blog.sailfishc.cn/posts/2020/03/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0sicp/</guid>
      <description>这是一篇资源篇，主要是整理了SICP课程的一些资源，包含了Python版的资源和Schema资源，这篇博客主要从几个方面来介绍如何去学习SICP：
  为什么要学习SICP SICP选择Python版还是Schema版本  为什么要学习SICP 先看下国外一些大神是如何评价SICP的：
 I’ve only ever seen one great book on the subject of computer programming: Structure and Interpretation of Computer Programs (Abelson and Sussman; MIT Press). If you’re already a great programmer, it will take you an evening to read the first few chapters and you’ll discover a precision vocabulary for discussing what you’ve spent 10 years learning the hard way. If you’re not already a great programmer, I would have thought that these few chapters would save you from having to spend years flailing around in the dark.</description>
    </item>
    
  </channel>
</rss>
