<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>总结 on 橙小张的博客</title>
    <link>https://blog.sailfishc.cn/tags/%E6%80%BB%E7%BB%93/</link>
    <description>Recent content in 总结 on 橙小张的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 25 Mar 2020 14:59:49 +0800</lastBuildDate><atom:link href="https://blog.sailfishc.cn/tags/%E6%80%BB%E7%BB%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>工作四年的一些思考</title>
      <link>https://blog.sailfishc.cn/posts/2020/03/%E5%B7%A5%E4%BD%9C%E5%9B%9B%E5%B9%B4%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</link>
      <pubDate>Wed, 25 Mar 2020 14:59:49 +0800</pubDate>
      
      <guid>https://blog.sailfishc.cn/posts/2020/03/%E5%B7%A5%E4%BD%9C%E5%9B%9B%E5%B9%B4%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</guid>
      <description>写在之前 16年毕业，工作快4年，就职了2家公司，感受过稳定发展，也感受过中型公司无尽的会议和创业公司在寻求业务发展和技术快速实现的矛盾，今天是在公司的最后一天，偷得一日闲，回顾下自己毕业之后这几年工作的一些经历和感悟。
毕业 第一阶段 二本毕业，基本上毕业就失业，但好在大三的时候自己一个人从兰州跑到北京来学习了一段时间，因为这个事情，从预备党员降级为了团员💔，大四的时候又从兰州到北京，开始找工作，面试蛮不顺利的，差不多面了一周多，面了有5家公司，因为还没毕业，也没有好的学校背景，技术也很一般，只有最后一家公司给了Offer，这是一家做电商的公司，公司的主要业务在线下的门店，线上的交易比较少，所以工作上也没有太多挑战，一块入职的几个同事都是刚毕业的，在公司里，有种还在上学的错觉，大家遇到问题一块讨论，工作强度也不大，有大量的时间去学习，但是对于刚毕业的我来说，可以接触到的资源还是太少，公司也没有技术实力比较强的人指导，自己当时是属于百度+知乎+CSDN+简书派程序员，除了看书就是刷刷视频学习学习，那段时间下来，感觉自己知道的特别多，后来也意识到在深度上差太多，有时候自己知道自己哪里有问题，但是不容易迫使自己去改变，在第一家公司工作了一年多，后来觉得自己在这边的环境下不能再成长太多了，有了萌生换一份工作的想法。
第二阶段 这次面试其实还是蛮顺利的，只面了京东，易宝支付和链家，拿到了两个Offer，链家面试官挺好的，但是技术还是达不到他们的要求，最终去了易宝支付，在易宝支付开始了新的职业生涯。
新的工作还是比较有挑战的，在这边主要处理的是资金相关的系统，每天交易流水都比较大，因为负责的系统不是一个快速迭代的系统，已经进入了维护阶段，开发的工作量也不是很大。在这份工作中，自己开始了正式的互联网研发流程（是的，第一家公司的不算正规的研发流程），这时候的我，对于维护的系统上线是很恐慌的状态，我认真的对待自己的代码，也努力的去熟悉以前的代码，深刻的认识着遗留代码的恶臭味，太多的魔法值，不规范的异常处理，关键的流程中没有日志，混杂着不同的远程调用协议，数据库索引不正确的设置，定制化逻辑，对于NULL和””不合理应用，NPE问题，超长的函数，超级大的类，不知道什么意思的配置文件，巨多的定时任务，不完善的UnitTest，经过好几年产品也搞不清楚的业务逻辑，都充斥在这个系统中，当时对于这些，我浑然不知。每次调整代码上线都比较紧张，即便是测试通过了，但是到线上也可能会出现一些莫名其妙的问题，这也就是所谓的泥潭吧，这段时间里，我的技术能力感觉没有提升，唯一提升的就是胆子变大了。
由于组织架构调整，2017年年底部门独立为一个子公司，我们开始创业了，作为第一批员工，赋予了新的意义，那就是要做成一件事情，因为有了公司期权了，老板想着要上市，干劲十足。
第三阶段 这份工作经历，从2017年年底到今天差不多2年3个月的时间，深刻的体会到了创业的困难程度，作为一个创业公司，算是比较幸福的，因为有盈利的业务，在第一年没有为钱担心过，但是公司得有新的血液注入，开始做起了新的产品，快速的产品迭代，不断的添加新的功能，做不完的需求，写不完的代码，时间快速的过去了365天，好像，做了一年了，做的产品在市场激起一朵浪花，是的，一朵也没有，第二年总结会上总结第一年的失败是由于没有及时的做市场推广导致的，开始了扩招销售的策略，当然，功能是不可能停止的，开发是不可能停止的，又过去了365天，依然，没有激起浪花，这就是创业的残忍之处，付出了两年青春，事情还是没有做成，早已不说上市走向认识巅峰，重要的是活下来，这期间经过了多次裁员，团队的很多人早已经没有了继续下去的动力，是时候选择离开了。
第四阶段 这两年写了很多代码，对于需求可以多快好省的完成，但是作为一个有追求的程序员，要抛下诗和远方，去休福报了。
感悟  前面说了这么多，开始聊聊自己这几年的一些感悟吧！
 时间成本  李永乐老师的科普视频中有一个例子：一年120的爱奇艺会员要不要买？
 这给问题可以用数学来计算一下：
 假如我是一个程序员，一天工作8小时，一个月上班22天（当然这些时间作为程序员都是不可能的），那么你一个月的工时就是：176小时，假设工资一个月为17600，那么时薪就是100元。 假如你每天看两个视频，一个视频广告时间为60s，那么一天是2分钟，一个月就是60分钟  如果不开会员，你就浪费了1个小时的时间来看广告了，你的时薪是100元，一个月的会员费为10元，很明显，你是开一个会员比较划算的。
这个思考对我影响很大，那就是对自己的时间有一个金钱衡量的方式，自己在做一些事情的时候可以有一个标准，哪些事情是值得做的，哪些是不值得做的。之前做的很多事情都是没有价值的，比如费时间去找一些破解的软件和视频，还不如多花点时间提升自己。
提升自己的技术深度  他问，“如果用5年的时间学习数据库，你能不能成为这个领域的专家？”
我说，“应该可以吧”
他说，“你现在25，5年后也才30，30岁就能成为某个领域的专家，为什么不去做呢？你看看周围有多少30岁的人还一事无成，而那个时候的你已经是数据库专家了。”
 这是我看的一篇公众号文章的一部分内容，对我也是有一些启发意义的，我知道自己的问题是喜欢看很多东西，但是没有深入的钻研，所以现在还是一个差不多先生，没有特别精通的一部分内容，多给自己一些时间去做一件事情，也许在一段时间内，你不知道微服务，你不知道Python有多火，但是如果坚持一件事情深度的去钻研，我相信，用不了几年时间，会比身边的人强很多，这个建议给你，也给我。
有效的学习，而不是为了学习而学习 在朋友圈经常会看到一些内容，刚看完极客时间的一个专栏文章，在朋友圈发了一小部分总结：
  主从原理：主库通过同步binlog到从库，relaylog去读 从库有延迟可以通过缓存，冗余数据解决 XXX   如果只是这种总结的话， 没什么作用，学习如何学习真的是一门长期探索的事情，不要只会看书做笔记，看视频写笔记，笔记写了很多，但是遇到需要的时候还是不知道如何去做，有一个例子是前两年得到的讲认知的一门课程，教你如何读书，但是你学习了之后还是不会按照他的学习方法去做。
这里推荐几个学习资源：
 Learning How to Learn: Powerful mental tools to … - Coursera 费曼学习法 学习金字塔  留出10%的时间去探索 拿出10%的时间用来探索未来，可以去找一些奇淫技巧，找一些提升自己效率的软件，寻求一些可以用来学习的网站，就像Google给员工20%的时间自己创作一样，给自己10%的事情去做一些探索未来的事情。
算法和英语 先进的技术，优质的资源，英语占了很大一部分，李笑来是一个很典型的例子，早期接触比特币，之后的事情大家都知道了。
算法能力是大厂的敲门砖，也可以改变自己的思维方式，只强调一点，不要为了刷题而刷题。
头脑预演  举个亲身例子，很多人都有用线程的经验，可是有多少人知道线程的本质是什么？有多少人在头脑里有一幅画面，显示出多线程程序的各种动态特征？其实很少有人知道。这就是为什么很多人过度的使用线程并发，结果产生各种同步问题，竞争状态（race condition），死锁等现象。某公司的一片多线程代码，号称是“有非常多并发程序经验”的程序员写的。结果没多久我就发现里面其实含有非常微妙的竞争情况，会在非常小的概率随机发作。</description>
    </item>
    
    <item>
      <title>2018年总结</title>
      <link>https://blog.sailfishc.cn/posts/2019/01/2018%E5%B9%B4%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 13 Jan 2019 17:37:00 +0000</pubDate>
      
      <guid>https://blog.sailfishc.cn/posts/2019/01/2018%E5%B9%B4%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://image.wufazhuce.com/FkfPZxbajsvcUM7qDmr-sq_yrrH5&#34; alt=&#34;2018&#34;&gt;&lt;/p&gt;
&lt;p&gt;2019年很多人都开始写自己的2018年的总结，虽然已经13号了，但是还是要总结下自己的2018，回头一想，一年过得还真快，2018年加入了创业公司，一年竟也过去了，在这一年里面，也没有做出什么成绩，但是还是有点收获，也总结分享一下。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
